{"version":3,"sources":["../../src/utils/spotify_func.js"],"names":["require","config","module","exports","getUserOptions","user","method","uri","headers","token","json","getPlaybackOptions","setPlaybackOptions","master","delay","body","track_uri","play_position","authOptions","redirect_uri","code","url","form","grant_type","Buffer","CLIENT_ID","CLIENT_SECRET","toString","getTrack","spotifyOptions","state","response_type","client_id","scope","PERMISSIONS_SCOPE"],"mappings":";;AAAA;AACAA,QAAQ,QAAR,EAAkBC,MAAlB;AACA,IAAMA,SAASD,QAAQ,UAAR,CAAf;;AAEAE,OAAOC,OAAP,GAAiB;;AAEbC,oBAAgB,wBAACC,IAAD,EAAU;AACtB,eAAO;AACHC,oBAAQ,KADL;AAEHC,iBAAK,+BAFF;AAGHC,qBAAS,EAAE,iBAAiB,YAAYH,KAAKI,KAApC,EAHN;AAIHC,kBAAM;AAJH,SAAP;AAMH,KATY;;AAWbC,wBAAoB,4BAACN,IAAD,EAAU;AAC1B,eAAO;AACHE,iBAAK,wDADF;AAEHC,qBAAS;AACL,iCAAiB,YAAYH,KAAKI,KAD7B;AAEL,gCAAgB;AAFX,aAFN;AAMHC,kBAAM;AANH,SAAP;AAQH,KApBY;;AAsBbE,wBAAoB,4BAACP,IAAD,EAAOQ,MAAP,EAA6B;AAAA,YAAdC,KAAc,uEAAN,CAAM;;AACjD,eAAO;AACCR,oBAAQ,KADT;AAECC,iBAAK,2CAFN;AAGCC,qBAAS,EAAE,iBAAiB,YAAYH,KAAKI,KAApC,EAHV;AAICC,kBAAM,IAJP;AAKCK,kBAAM;AACF,wBAAQ,CAACF,OAAOG,SAAR,CADN;AAEF,+BAAeH,OAAOI,aAAP,GAAuBH;AAFpC;AALP,SAAP;AAUC,KAjCY;;AAmCbI,iBAAa,qBAACC,YAAD,EAAeC,IAAf,EAAwB;AACjC,eAAO;AACHC,iBAAK,wCADF;AAEHC,kBAAM;AACNF,sBAAMA,IADA;AAEND,8BAAcA,YAFR;AAGNI,4BAAY;AAHN,aAFH;AAOHf,qBAAS;AACT,iCAAiB,WAAY,IAAIgB,MAAJ,CAAWvB,OAAOwB,SAAP,GAAmB,GAAnB,GAAyBxB,OAAOyB,aAA3C,EAA0DC,QAA1D,CAAmE,QAAnE;AADpB,aAPN;AAUHjB,kBAAM;AAVH,SAAP;AAYH,KAhDY;;AAkDbkB,cAAU,kBAACvB,IAAD,EAAOW,SAAP,EAAqB;AAC3B,eAAO;AACHT,iBAAK,uCAAuCS,SADzC;AAEHR,qBAAS;AACL,iCAAiB,YAAYH,KAAKI,KAD7B;AAEL,gCAAgB;AAFX,aAFN;AAMHC,kBAAM;AANH,SAAP;AAQH,KA3DY;AA4DbmB,oBAAgB,wBAACtB,GAAD,EAAMuB,KAAN,EAAgB;AAC5B,eAAO;AACHC,2BAAe,MADZ;AAEHC,uBAAW/B,OAAOwB,SAFf;AAGHQ,mBAAOhC,OAAOiC,iBAHX;AAIHf,0BAAcZ,GAJX;AAKHuB;AALG,SAAP;AAOD;AApEU,CAAjB","file":"spotify_func.js","sourcesContent":["/*jshint esversion: 6 */\nrequire('dotenv').config();\nconst config = require('./config');\n\nmodule.exports = {\n\n    getUserOptions: (user) => {\n        return { \n            method: 'GET',\n            uri: 'https://api.spotify.com/v1/me',\n            headers: { 'Authorization': 'Bearer ' + user.token },\n            json: true \n        }\n    },\n      \n    getPlaybackOptions: (user) => {\n        return {\n            uri: 'https://api.spotify.com/v1/me/player/currently-playing',\n            headers: { \n                'Authorization': 'Bearer ' + user.token,\n                'Content-Type': 'application/json'\n            },\n            json: true \n        }\n    },\n      \n    setPlaybackOptions: (user, master, delay = 1) => {  \n    return {\n            method: 'PUT',\n            uri: 'https://api.spotify.com/v1/me/player/play',\n            headers: { 'Authorization': 'Bearer ' + user.token },\n            json: true ,\n            body: {\n                \"uris\": [master.track_uri],\n                \"position_ms\": master.play_position - delay\n            }\n        }\n    },\n      \n    authOptions: (redirect_uri, code) => {\n        return {\n            url: 'https://accounts.spotify.com/api/token',\n            form: {\n            code: code,\n            redirect_uri: redirect_uri,\n            grant_type: 'authorization_code',\n            },\n            headers: {\n            'Authorization': 'Basic ' + (new Buffer(config.CLIENT_ID + ':' + config.CLIENT_SECRET).toString('base64'))\n            },\n            json: true\n        }\n    },\n\n    getTrack: (user, track_uri) => {\n        return {\n            uri: 'https://api.spotify.com/v1/tracks/' + track_uri,\n            headers: { \n                'Authorization': 'Bearer ' + user.token,\n                'Content-Type': 'application/json'\n            },\n            json: true \n        }\n    },\n    spotifyOptions: (uri, state) => {\n        return {\n            response_type: 'code',\n            client_id: config.CLIENT_ID,\n            scope: config.PERMISSIONS_SCOPE,\n            redirect_uri: uri,\n            state\n        }\n      } ,\n};\n"]}